;; /**********   UNDERSCORES IN NAMES PLEASE!    ********/
{:enums {
         :question_origin {:description "Question edited from a previous one"
                   :values [:ORIGINAL :DERIVED]}
         :question_type {:description "Question options"
                   :values [:CLOSED :OPTIONS :OPEN :COLUMNS]}}
 :interfaces {
              :character {
                          :fields {:id         {:type String}
                                   :name       {:type String}
                                   :appears_in {:type (list :question_origin)}
                                   :friends    {:type (list :question_type)}}}}
 :objects {
           :quotes {
                     :description "Quotes List type."
                     :fields {
                              :quotes       {:type (list :quote)}}}
           :quote {
                      :description "Quote One type."
                      :fields {
                               :id          {:type (non-null Int)}
                               :total       {:type (non-null Int)}
                               :author      {:type (non-null String)}
                               :quote       {:type (non-null String)}}}
           :comments {
                      :description "Comments collection schema."
                      :fields {
                               :comments    {:type (list :comment)}
                               }}
           :comment {
                     :description "Comment type."
                     :fields {:id            {:type Int}
                              :comment       {:type (non-null String)}
                              :created_at    {:type String}
                              :username      {:type String}}}
           }
 :queries {
           :load_comments {:type        (non-null :comments)
                           :description "Access comments from blog entry id."
                           :args        {:post_id {:type (non-null Int)}}
                           :resolve     :load-comments}
           :load_quotes {:type        (non-null :quotes)
                         :description "Send quotes data."
                         :args        {:offset {:type (non-null ID)}
                                       :limit  {:type (non-null ID)}}
                         :resolve     :load-quotes}
           }
 :mutations {
             :create_comment {:type :comment
                              :description "Create new comment."
                              :args {:post_id     {:type (non-null Int)}
                                     :comment     {:type (non-null String)}
                                     :user_id     {:type (non-null Int)}}
                              :resolve :create-comment}
             :create_quote {:type :quote
                            :description "Create a new quote."
                            :args {:quote    {:type (non-null String)}
                                   :author   {:type (non-null String)}}
                            :resolve :create-quote}
             :update_quote {:type :quote
                            :description "Update a quote."
                            :args {:quote       {:type (non-null String)}
                                    :author      {:type (non-null String)}
                                    :id           {:type (non-null Int)}}
                            :resolve :update-quote}
             :delete_quote {:type :quote
                            :description "Remove quote."
                            :args {:id    {:type (non-null Int)}}
                            :resolve :delete-quote}
             }
}
